<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>数据统计分析与挖掘</title>
  
  <subtitle>DataAnalysisZH</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-17T13:56:24.624Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>DataAnalysisZH</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>相关系数的选择</title>
    <link href="http://yoursite.com/wiki/%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/"/>
    <id>http://yoursite.com/wiki/%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/</id>
    <published>2020-02-12T16:00:00.000Z</published>
    <updated>2020-02-17T13:56:24.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>相关系数的大小与相关系数的显著性水平是什么关系？如何解释？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><ul><li>两连续变量：Pearson 相关；<br>两等级变量：Sperarman 相关；<br>一列为连续变量，一列二分变量：点二列相关；<br>多个等评评定：Kendall 和谐系数 <strong>@Bob</strong></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;相关系数的大小与相关系数的显著性水平是什么关系？如何解释？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="理论" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="相关" scheme="http://yoursite.com/tags/%E7%9B%B8%E5%85%B3/"/>
    
      <category term="系数" scheme="http://yoursite.com/tags/%E7%B3%BB%E6%95%B0/"/>
    
      <category term="变量类型" scheme="http://yoursite.com/tags/%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>线性回归假设</title>
    <link href="http://yoursite.com/wiki/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%81%87%E8%AE%BE/"/>
    <id>http://yoursite.com/wiki/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%81%87%E8%AE%BE/</id>
    <published>2020-01-29T16:00:00.000Z</published>
    <updated>2020-02-17T13:56:24.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>线性回归有什么假设？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><ul><li>古典线性模型需要 7 条假定(ucb 的 Bickle 一本书，想不起名字了居然…)，如果假定不满足，一条一条的修正就慢慢演化到现代的线性模型。<a href="t.me/ld2012">@ld2012</a></li><li>自变量必需已知；可加性和线性。门外汉，小白见解 🙈 <a href="t.me/colorfi">@colorfi</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;线性回归有什么假设？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;headerlink&quot; title=&quot;回答&quot;
      
    
    </summary>
    
    
      <category term="理论" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="线性回归" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    
      <category term="假设" scheme="http://yoursite.com/tags/%E5%81%87%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>正则化</title>
    <link href="http://yoursite.com/wiki/%E6%AD%A3%E5%88%99%E5%8C%96/"/>
    <id>http://yoursite.com/wiki/%E6%AD%A3%E5%88%99%E5%8C%96/</id>
    <published>2020-01-28T16:00:00.000Z</published>
    <updated>2020-02-17T13:56:24.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>什么是正则化？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>正则化简单地讲就是在估计值 $\hat{\beta}$ 中加多了一个限制项，得到了一个 $\hat{\beta}’$, 这样的话，在数学上可以证明：$||\hat{\beta}’|| &lt; ||\hat{\beta}||$ 「参考测度论」，所以加入者正则项后，新的估计值 $\hat{\beta}’$ 的长度小于原来的估计值 $\hat{\beta}$，这样我们就可以避免过拟合。<a href="参考：https://charlesliuyx.github.io/2017/10/03/%E3%80%90%E7%9B%B4%E8%A7%82%E8%AF%A6%E8%A7%A3%E3%80%91%E4%BB%80%E4%B9%88%E6%98%AF%E6%AD%A3%E5%88%99%E5%8C%96/">参考链接</a> <a href="t.me/mbpRetina">@mbpRetina</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;什么是正则化？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;headerlink&quot; title=&quot;回答&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="理论" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="正则化" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E5%8C%96/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>传染病估算</title>
    <link href="http://yoursite.com/wiki/%E4%BC%A0%E6%9F%93%E7%97%85%E4%BC%B0%E7%AE%97/"/>
    <id>http://yoursite.com/wiki/%E4%BC%A0%E6%9F%93%E7%97%85%E4%BC%B0%E7%AE%97/</id>
    <published>2020-01-22T16:00:00.000Z</published>
    <updated>2020-02-17T13:56:24.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>如何估算武汉肺炎全国受感染人数？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><ul><li>我觉得三大运营商可以很方便统计，支付宝还可能有偏 <a href="t.me/m1kufan">@m1kufan</a></li><li>定位号码在医院的非常驻人员？（ <a href="t.me/wweiyan">@wweiyan</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;如何估算武汉肺炎全国受感染人数？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="应用" scheme="http://yoursite.com/categories/%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="估算" scheme="http://yoursite.com/tags/%E4%BC%B0%E7%AE%97/"/>
    
      <category term="武汉肺炎" scheme="http://yoursite.com/tags/%E6%AD%A6%E6%B1%89%E8%82%BA%E7%82%8E/"/>
    
      <category term="传染病" scheme="http://yoursite.com/tags/%E4%BC%A0%E6%9F%93%E7%97%85/"/>
    
  </entry>
  
  <entry>
    <title>Python 词云制作</title>
    <link href="http://yoursite.com/wiki/Python%20%E8%AF%8D%E4%BA%91%E5%88%B6%E4%BD%9C/"/>
    <id>http://yoursite.com/wiki/Python%20%E8%AF%8D%E4%BA%91%E5%88%B6%E4%BD%9C/</id>
    <published>2020-01-19T16:00:00.000Z</published>
    <updated>2020-02-17T13:56:24.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>制作词云有什么简单易的方法或工具？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><ul><li>wordcloud2 tableau finebi 也行<a href="t.me/wweiyan">@wweiyan</a></li><li>mathematica 也行（ <a href="t.me/clover0722">@clover0722</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;制作词云有什么简单易的方法或工具？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="应用" scheme="http://yoursite.com/categories/%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="词云" scheme="http://yoursite.com/tags/%E8%AF%8D%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>线性回归多重共线性</title>
    <link href="http://yoursite.com/wiki/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%A4%9A%E9%87%8D%E5%85%B1%E7%BA%BF%E6%80%A7/"/>
    <id>http://yoursite.com/wiki/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%A4%9A%E9%87%8D%E5%85%B1%E7%BA%BF%E6%80%A7/</id>
    <published>2020-01-17T16:00:00.000Z</published>
    <updated>2020-02-17T13:56:24.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在多元线性回归中，自变量间的多重共线性问题如何判断和处理？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p><strong>【定义】</strong><br>当自变量之间存在某种线性关系或高度相关的时候，就会发生多重共线性问题。</p><p>多重共线性问题的两种情形都会给回归模型的参数估计带来困难。完全多重共线性问题指矩阵 X’X 严格不可逆的情形，造成了模型的不可估计；近似多重共线性问题即数据矩阵中的一个或几个列向量可以近似地表达为其他列向量的线性组合的情形，会导致参数估计值的标准误过大。</p><p><strong>【判断】</strong><br>一个判断是否存在严重近似共线性问题的经验性原则是:（1）自变量中最大的方差膨胀因子 VIF 大于 10；（2）平均方差膨胀因子 VIF 明显大于 1。</p><p><strong>【解决】</strong><br>当多重共线性问题发生时，我们需要对其进行处理才能保证模型本身的有效性。</p><p>如果发生的是完全多重共线性问题，则直接删除在数据中不必要的变量即可。这些变量可能是虚拟变量中的参照组，也可是包含了某些变量或其线性组合而生成的新变量。只要保证删除变量后无完全多重共线性问题即可。</p><p>如果发生的是近似多重共线性问题，就没有特别简单的方法来解决。如果在理论上我们可以识别某些自变量，即自变量在理论上都是有意义且意义不重复或每个自变量都不可以被其他自变量线性解释，那么当在实际中出现近似多重共线性问题时，我们可以通过增大样本量来解决多重共线性问题。</p><p>但是当没有明确的理论，不能在理论上识别某些自变量的时候，可以利用一些技术上的处理方法来减少自变量的数目。比较典型的方法是把彼此之间存在一定相关性的变量综合成较少的几个变量。这种综合变量信息的方法包括偏最小二乘回归分析、主成分分析法以及由主成分分析法推广得到的因子分析。</p><p><strong>【参考】</strong><br>谢宇《回归分析》</p><p><a href="t.me/reynd">@reynd</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;在多元线性回归中，自变量间的多重共线性问题如何判断和处理？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="理论" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/"/>
    
      <category term="应用" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="线性回归" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    
      <category term="多重共线性" scheme="http://yoursite.com/tags/%E5%A4%9A%E9%87%8D%E5%85%B1%E7%BA%BF%E6%80%A7/"/>
    
      <category term="多元线性回归" scheme="http://yoursite.com/tags/%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    
      <category term="自变量" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8F%98%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>随机森林泛化能力</title>
    <link href="http://yoursite.com/wiki/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E6%B3%9B%E5%8C%96%E8%83%BD%E5%8A%9B/"/>
    <id>http://yoursite.com/wiki/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97%E6%B3%9B%E5%8C%96%E8%83%BD%E5%8A%9B/</id>
    <published>2020-01-15T16:00:00.000Z</published>
    <updated>2020-02-17T13:56:24.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>为什么说随机森林比决策树拥有更好的泛化能力？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>随机森林拥有投票机制，减少单棵树出现的偏向问题<br>决策树单一决策 容易过拟合 <a href="t.me/wweiyan">@wweiyan</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;为什么说随机森林比决策树拥有更好的泛化能力？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="理论" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/"/>
    
      <category term="应用" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="随机森林" scheme="http://yoursite.com/tags/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/"/>
    
      <category term="决策树" scheme="http://yoursite.com/tags/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    
      <category term="泛化能力" scheme="http://yoursite.com/tags/%E6%B3%9B%E5%8C%96%E8%83%BD%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>选择与切片</title>
    <link href="http://yoursite.com/wiki/%E9%80%89%E6%8B%A9%E4%B8%8E%E5%88%87%E7%89%87/"/>
    <id>http://yoursite.com/wiki/%E9%80%89%E6%8B%A9%E4%B8%8E%E5%88%87%E7%89%87/</id>
    <published>2019-09-02T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在不同的数据分析软件/语言中，选(select)取或切片(slice)有什么技巧？请畅所欲言~</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>暂无，前往 <a href="https://t.me/dataanalysiszh" target="_blank" rel="noopener">Telegram 群</a> 参与答题。不积跬步无以至千里。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;在不同的数据分析软件/语言中，选(select)取或切片(slice)有什么技巧？请畅所欲言~&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="语言" scheme="http://yoursite.com/categories/%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="语言" scheme="http://yoursite.com/tags/%E8%AF%AD%E8%A8%80/"/>
    
      <category term="选择" scheme="http://yoursite.com/tags/%E9%80%89%E6%8B%A9/"/>
    
      <category term="切片" scheme="http://yoursite.com/tags/%E5%88%87%E7%89%87/"/>
    
      <category term="R" scheme="http://yoursite.com/tags/R/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>判断变形词</title>
    <link href="http://yoursite.com/wiki/%E5%88%A4%E6%96%AD%E5%8F%98%E5%BD%A2%E8%AF%8D/"/>
    <id>http://yoursite.com/wiki/%E5%88%A4%E6%96%AD%E5%8F%98%E5%BD%A2%E8%AF%8D/</id>
    <published>2019-08-29T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:48.258Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>给定两个字符串 str1 和 str2，如果 str1 和 str2 中出现的字符种类一样且每种字符出现的次数也一样，那么 str1 与 str2 互为变形词。请实现函数判断两个字符串是否互为变形词。</p><p>【举例】<br>str1=＂123＂，str2=＂231＂，返回 true。str1=＂123＂，str2=＂2331＂，返回 false。</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><ol><li><a href="t.me/reynd">@reynd</a> Python3</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isAnagram</span><span class="params">(self, s: str, t: str)</span> -&gt; bool:</span></span><br><span class="line">    <span class="keyword">if</span> s ==<span class="string">""</span> <span class="keyword">and</span> t == <span class="string">""</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(s) != len(t) <span class="keyword">or</span> len(set(s)) != len(set(t)):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> set(s):</span><br><span class="line">        s_count = s.count(char)</span><br><span class="line">        t_count = t.count(char)</span><br><span class="line">        <span class="keyword">if</span> s_count != t_count:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>主要利用了 set 的内置优化和特性减少运算，以及使用布尔运算提高效率。</p><p>执行用时 : 48 ms, 在所有 Python3 提交中击败了 98.93% 的用户<br>内存消耗 : 14 MB, 在所有 Python3 提交中击败了 29.70% 的用户</p><ol start="2"><li><a href="about:blank">@bob </a> C++</li></ol><p>如果字符串 str1 和 str2 长度不同，直接返回 false。</p><p>如果长度相同，假设出现字符的编码值在 0~255 之间，那么先申请一个长度为 256 的<br>整型数组 map，<code>map[a]=b</code> 代表字符编码为 a 的字符出现了 b 次，初始时 map[0-255]的值都是 0。</p><p>然后遍历字符串 str1, 统计每种字符出现的数量，比如遍历到字符 ‘a’，其编码值为 97，则令 <code>map[97]++</code>。这样 map 就成了 str1 中每种字符的词频统计表。</p><p>然后遍历字符串 str2，每遍历到一个字符，都在 map 中把词频减下来，比如遍历到字符 ‘a’，其编码值为 97，则令 <code>map[97]--</code>，如果减少之后的值小于 0，直接返回 false。</p><p>如果遍历完 str2，map 中的值也没出现负值，则返回 true。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;给定两个字符串 str1 和 str2，如果 str1 和 str2 中出现的字符种类一样且每种字符出现的次数也一样，那么 str1 与 s
      
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="变形词" scheme="http://yoursite.com/tags/%E5%8F%98%E5%BD%A2%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>日活与月活</title>
    <link href="http://yoursite.com/wiki/%E6%97%A5%E6%B4%BB%E4%B8%8E%E6%9C%88%E6%B4%BB/"/>
    <id>http://yoursite.com/wiki/%E6%97%A5%E6%B4%BB%E4%B8%8E%E6%9C%88%E6%B4%BB/</id>
    <published>2019-08-28T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>运营中，日活与月活的比值变化，说明了什么？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>作者：Aaron 余乐<br>链接：<a href="https://www.zhihu.com/question/24007425/answer/130382392" target="_blank" rel="noopener">https://www.zhihu.com/question/24007425/answer/130382392</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>DAU（日活）：单日活跃用户量，反应产品短期用户活跃度</p><p>MAU（月活）：单月活跃用户量，反应产品长期用户活跃度日活和月活的比值乘以 30 等于用户月平均登录天数。</p><p>日活和月活的比值高，代表一个月有使用产品的用户中，每天都使用产品的用户比例高，即使用频率高，用户对产品的依赖性强，同时也说明用户粘度较强。另一方面，也代表了用户的流失率低，留存率高。</p><p>日活和月活的比值低，所有结论相反，用户使用频率低，依赖性弱，粘度较弱，用户流失率高，留存率低。</p><p>下面分 4 种动态情况来讨论日活和月活的关系</p><ol><li>日活和月活的比值变高，日活增加显著。说明产品的改动或者啥大新闻让部分沉默用户苏醒，但是这个改动和大新闻大多触及到产品已有老用户，这种情况下我们应该加大对产品新功能的推广和宣传，引导更多的新用户成为我们的活跃用户。</li><li>日活和月活的比值变高，月活减少显著。说明非忠实用户的流失变得严重，对于一部分刚需的用户我们可以保留下来，但是对于不是刚需的用户我们无法挽留，这种情况下我们应该在保证核心功能的基础上进行功能多元化的探索，满足更多非刚需非忠实用户的需求。</li><li>日活和月活的比值变低，日活减少显著。说明我们的核心功能出现了问题或者外界的影响造成了用户对产品本身的恐慌，像什么某某某 P2P 跑路了等等，导致原本使用产品的用户跳到竞品或者不再使用，这种情况下我们应该分析竞品的动向，确保我们的核心功能各方面使用体验达到最优，才能挽留用户。</li><li>日活和月活的比值变低，月活增加显著。说明产品的改动或者外界的推广让短期用户活跃度提升，但是这个改动和影响不具备可持续性，可能是用户玩一下就腻了的快死型功能，比如脸萌，足迹这种功能，这种情况下我们要思考如何增加用户的粘度，减少用户流失。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;运营中，日活与月活的比值变化，说明了什么？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
    
      <category term="应用" scheme="http://yoursite.com/categories/%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="应用" scheme="http://yoursite.com/tags/%E5%BA%94%E7%94%A8/"/>
    
      <category term="日活" scheme="http://yoursite.com/tags/%E6%97%A5%E6%B4%BB/"/>
    
      <category term="月活" scheme="http://yoursite.com/tags/%E6%9C%88%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>数据分析资料推荐</title>
    <link href="http://yoursite.com/wiki/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E8%B5%84%E6%96%99%E6%8E%A8%E8%8D%90/"/>
    <id>http://yoursite.com/wiki/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E8%B5%84%E6%96%99%E6%8E%A8%E8%8D%90/</id>
    <published>2019-08-20T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>对数据分析相关技能，你最推荐的学习材料是？请注明技能、推荐阶段和推荐理由。如：</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>《利用 Python 进行数据分析》 <a href="t.me/reynd">@reynd</a><br>技能： Python 数据分析<br>阶段： 入门<br>理由： 作者经验丰富行文简洁有条理，看一遍就能上手主流的数据分析工具。</p><p>在线阅读： <a href="https://wizardforcel.gitbooks.io/pyda-2e/content/" target="_blank" rel="noopener">https://wizardforcel.gitbooks.io/pyda-2e/content/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;对数据分析相关技能，你最推荐的学习材料是？请注明技能、推荐阶段和推荐理由。如：&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; 
      
    
    </summary>
    
    
      <category term="理论" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="资料" scheme="http://yoursite.com/tags/%E8%B5%84%E6%96%99/"/>
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>人数估算</title>
    <link href="http://yoursite.com/wiki/%E4%BA%BA%E6%95%B0%E4%BC%B0%E7%AE%97/"/>
    <id>http://yoursite.com/wiki/%E4%BA%BA%E6%95%B0%E4%BC%B0%E7%AE%97/</id>
    <published>2019-08-19T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>如何估算香港一次游行/集会的人数？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>抽样 <a href="t.me/mbpRetina">@mbpRetina</a></p><p>抽样吧 静态和动态都可以 然后再调权重</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;如何估算香港一次游行/集会的人数？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="应用" scheme="http://yoursite.com/categories/%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="应用" scheme="http://yoursite.com/tags/%E5%BA%94%E7%94%A8/"/>
    
      <category term="估算" scheme="http://yoursite.com/tags/%E4%BC%B0%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>约瑟夫环问题</title>
    <link href="http://yoursite.com/wiki/%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/wiki/%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF%E9%97%AE%E9%A2%98/</id>
    <published>2019-08-18T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>有 n 个人围成一圈，顺序排号。从第一个人开始报数（从 1 到 3 报数），凡报到 3 的人退出圈子，问最后留下的是原来第几号的那位。</p><p>跟群名似乎无关，但是感觉挺好玩 🤪</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>C 语言模拟 <a href="t.me/capwill2">@capwill2</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num[MAX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,p;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;p;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">1</span>,current_step=<span class="number">1</span>,killed=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(killed!=n<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(current_step==p)&#123;</span><br><span class="line">            num[i]=<span class="number">1</span>;</span><br><span class="line">            killed++;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"kill "</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            current_step=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;n)</span><br><span class="line">            i=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(num[i]==<span class="number">0</span>)</span><br><span class="line">            current_step++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(num[i]==<span class="number">0</span>) <span class="built_in">cout</span>&lt;&lt;<span class="string">"survivor: "</span>&lt;&lt;i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路是用数组模拟循环链表。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;有 n 个人围成一圈，顺序排号。从第一个人开始报数（从 1 到 3 报数），凡报到 3 的人退出圈子，问最后留下的是原来第几号的那位。&lt;/p
      
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="约瑟夫环" scheme="http://yoursite.com/tags/%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>无监督学习</title>
    <link href="http://yoursite.com/wiki/%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/wiki/%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/</id>
    <published>2019-08-17T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>Suppose we a data set where each data point represents a single student’s scores on a math test, a physics test, a reading comprehension test, and a vocabulary test.</p><p>We find the first two principal components, which capture 90% of the variability in the data, and interpret their loadings. We conclude that the first principal component represents overall academic ability, and the second represents a contrast between quantitative ability and verbal ability.</p><p>What loadings would be consistent with that interpretation? Choose all that apply.</p><p>a. (0.5, 0.5, 0.5, 0.5) and (0.71, 0.71, 0, 0)</p><p>b. (0.5, 0.5, 0.5, 0.5) and (0, 0, -0.71, -0.71)</p><p>c. (0.5, 0.5, 0.5, 0.5) and (0.5, 0.5, -0.5, -0.5)</p><p>d. (0.5, 0.5, 0.5, 0.5) and (-0.5, -0.5, 0.5, 0.5)</p><p>f. (0.71, 0.71, 0, 0) and (0, 0, 0.71, 0.71)</p><p>g. (0.71, 0, -0.71, 0) and (0, 0.71, 0, -0.71)</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a href="about:blank">@bob</a> The answers are (c) and (d).</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;Suppose we a data set where each data point represents a single studen
      
    
    </summary>
    
    
      <category term="理论" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="无监督学习" scheme="http://yoursite.com/tags/%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>排序算法</title>
    <link href="http://yoursite.com/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</id>
    <published>2019-08-16T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>常见的排序算法有哪些？各语言如何实现？</p><p>这个问题有点大。因为排序算法有好多，举一个例子就成。而且 R 与 Python 是不是不用考虑排序算法？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>三类排序 <a href="t.me/capwill2">@capwill2</a></p><ul><li><p>插入排序有直接插入排序、希尔排序；</p></li><li><p>交换排序有冒泡排序、快速排序；</p></li><li><p>选择排序有简单选择排序、堆排序。</p></li></ul><p>举个 c++ 最简单的堆排序实现，用 stl，优先级队列即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;常见的排序算法有哪些？各语言如何实现？&lt;/p&gt;
&lt;p&gt;这个问题有点大。因为排序算法有好多，举一个例子就成。而且 R 与 Python 是不是
      
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="http://yoursite.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>SQL 通配符</title>
    <link href="http://yoursite.com/wiki/SQL%20%E9%80%9A%E9%85%8D%E7%AC%A6/"/>
    <id>http://yoursite.com/wiki/SQL%20%E9%80%9A%E9%85%8D%E7%AC%A6/</id>
    <published>2019-08-15T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>SQL 语言允许使用通配符进行字符串匹配的操作，其中‘%’可以表示<br>A.零个字符<br>B.1 个字符<br>C.多个字符<br>D.以上都是</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p><a href="about:blank">@bob</a> 替代 0 个或多个字符，选择 D。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;SQL 语言允许使用通配符进行字符串匹配的操作，其中‘%’可以表示&lt;br&gt;A.零个字符&lt;br&gt;B.1 个字符&lt;br&gt;C.多个字符&lt;br&gt;D.
      
    
    </summary>
    
    
      <category term="应用" scheme="http://yoursite.com/categories/%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="SQL" scheme="http://yoursite.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>t 检验</title>
    <link href="http://yoursite.com/wiki/t%20%E6%A3%80%E9%AA%8C/"/>
    <id>http://yoursite.com/wiki/t%20%E6%A3%80%E9%AA%8C/</id>
    <published>2019-08-13T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>t 检验是否要样本数据呈正态分布？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>抽样分布符合正态就可以用。 <a href="t.me/mbpRetina">@mbpRetina</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;t 检验是否要样本数据呈正态分布？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="理论" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="统计" scheme="http://yoursite.com/tags/%E7%BB%9F%E8%AE%A1/"/>
    
      <category term="t检验" scheme="http://yoursite.com/tags/t%E6%A3%80%E9%AA%8C/"/>
    
      <category term="正态" scheme="http://yoursite.com/tags/%E6%AD%A3%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>监督学习</title>
    <link href="http://yoursite.com/wiki/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/wiki/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/</id>
    <published>2019-08-11T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>什么是监督学习？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>有一组已知类别/分类的数据作为样本来训练的模型。</p><p>例：knn、贝叶斯分类、回归。 <a href="t.me/mbpRetina">@mbpRetina</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;什么是监督学习？&lt;/p&gt;
&lt;h2 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;headerlink&quot; title=&quot;回答&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="理论" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="监督学习" scheme="http://yoursite.com/tags/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>列表排序、去重</title>
    <link href="http://yoursite.com/wiki/%E5%88%97%E8%A1%A8%E6%8E%92%E5%BA%8F%E3%80%81%E5%8E%BB%E9%87%8D/"/>
    <id>http://yoursite.com/wiki/%E5%88%97%E8%A1%A8%E6%8E%92%E5%BA%8F%E3%80%81%E5%8E%BB%E9%87%8D/</id>
    <published>2019-08-09T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>请用自己的算法, 按升序合并如下两个 list, 并去除重复的元素:</p><p><code>list1 = [2, 3, 8, 4, 9, 5, 6]</code><br><code>list2 = [5, 6, 10, 17, 11, 2]</code></p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><ol><li><a href="about:blank">@bob</a> 用 C++ 写了一下</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> list1[] = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> list2[] = &#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">17</span>,<span class="number">11</span>,<span class="number">2</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> length1 = <span class="keyword">sizeof</span>(list1) / <span class="keyword">sizeof</span>(list1[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">int</span> length2 = <span class="keyword">sizeof</span>(list2) / <span class="keyword">sizeof</span>(list2[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    sort(list1,list1+length1);</span><br><span class="line">    sort(list2,list2+length2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">list</span>[length1+length2],index=<span class="number">0</span>,i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i&lt;length1 || j&lt;length2)&#123;</span><br><span class="line">        <span class="keyword">if</span>(list1[i]==list2[j])&#123;</span><br><span class="line">            <span class="built_in">list</span>[index++]=list1[i++];</span><br><span class="line">            j++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(list1[i]&gt;list2[j])&#123;</span><br><span class="line">            <span class="built_in">list</span>[index++]=list2[j++];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">list</span>[index++] = list1[i++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i&lt;length1)&#123;</span><br><span class="line">        <span class="built_in">list</span>[index++] = list1[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(j&lt;length2)&#123;</span><br><span class="line">        <span class="built_in">list</span>[index++] = list2[j++];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;index;i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">list</span>[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p><a href="t.me/@capwill2">@capwill2</a></p><p>我也刚刚用 C++写的 40 行。</p><p>我的思路是先全部排序好，最后做一次归并。复杂度为排序的复杂度，用的 stl 的 sort，O(nlogn)。其实可以直接考虑使用 set 容器，直接去重并排序。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;请用自己的算法, 按升序合并如下两个 list, 并去除重复的元素:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;list1 = [2, 3, 8, 4, 9
      
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="列表" scheme="http://yoursite.com/tags/%E5%88%97%E8%A1%A8/"/>
    
      <category term="排序" scheme="http://yoursite.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="去重" scheme="http://yoursite.com/tags/%E5%8E%BB%E9%87%8D/"/>
    
  </entry>
  
  <entry>
    <title>线性混合效应模型</title>
    <link href="http://yoursite.com/wiki/%E7%BA%BF%E6%80%A7%E6%B7%B7%E5%90%88%E6%95%88%E5%BA%94%E6%A8%A1%E5%9E%8B/"/>
    <id>http://yoursite.com/wiki/%E7%BA%BF%E6%80%A7%E6%B7%B7%E5%90%88%E6%95%88%E5%BA%94%E6%A8%A1%E5%9E%8B/</id>
    <published>2019-08-08T16:00:00.000Z</published>
    <updated>2020-01-16T03:44:47.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>线性混合效应模型，公式 Y ~ 1 + A + B + (1 | C:D:E)，数字 1 和符号 | 各代表什么含义？这种公式怎么理解呢？</p><h2 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h2><p>暂无，前往 <a href="https://t.me/dataanalysiszh" target="_blank" rel="noopener">Telegram 群</a> 参与答题。不积跬步无以至千里。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;线性混合效应模型，公式 Y ~ 1 + A + B + (1 | C:D:E)，数字 1 和符号 | 各代表什么含义？这种公式怎么理解呢？&lt;
      
    
    </summary>
    
    
      <category term="理论" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="每日一题" scheme="http://yoursite.com/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
      <category term="回归" scheme="http://yoursite.com/tags/%E5%9B%9E%E5%BD%92/"/>
    
      <category term="线性模型" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B/"/>
    
      <category term="混合效应" scheme="http://yoursite.com/tags/%E6%B7%B7%E5%90%88%E6%95%88%E5%BA%94/"/>
    
  </entry>
  
</feed>
